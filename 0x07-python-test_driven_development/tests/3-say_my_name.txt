# 3-say_my_name.txt

===========================
How to use 3-say_my_name.py
===========================

The module has one function that prints a name

Strings
=======

The functions takes in string argument(s) and prints out the name

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("John", "Doe")
    My name is John Doe

The functions works with a whitespace as an argument

::

    >>> say_my_name("John", ) #doctest: +NORMALIZE_WHITESPACE
    My name is John

String errors
=============

It raises a TypeError if string is inside another data structure

::

    >>> say_my_name(["John"])
    Traceback (most recent call last):
      ...
    TypeError: first_name must be a string

::

    >>> say_my_name(["John"], ["Doe"])
    Traceback (most recent call last):
      ...
    TypeError: first_name must be a string

::

    >>> say_my_name("John", ["Doe"])
    Traceback (most recent call last):
      ...
    TypeError: last_name must be a string

Non-strings
===========

The functions raises a TypeError if a non-string is provided

::

    >>> say_my_name(John, 23)
    Traceback (most recent call last):
      ...
    NameError: name 'John' is not defined

::

    >>> say_my_name()
    Traceback (most recent call last):
      ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

::

    >>> say_my_name(None)
    Traceback (most recent call last):
      ...
    TypeError: first_name must be a string

::

    >>> say_my_name(float('inf'), float('inf'))
    Traceback (most recent call last):
      ...
    TypeError: first_name must be a string
